#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lance")]
	public partial class LanceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdvert(Advert instance);
    partial void UpdateAdvert(Advert instance);
    partial void DeleteAdvert(Advert instance);
    partial void InsertApply(Apply instance);
    partial void UpdateApply(Apply instance);
    partial void DeleteApply(Apply instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertLUser(LUser instance);
    partial void UpdateLUser(LUser instance);
    partial void DeleteLUser(LUser instance);
    #endregion
		
		public LanceDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LanceConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LanceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Advert> Adverts
		{
			get
			{
				return this.GetTable<Advert>();
			}
		}
		
		public System.Data.Linq.Table<Apply> Applies
		{
			get
			{
				return this.GetTable<Apply>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<LUser> LUsers
		{
			get
			{
				return this.GetTable<LUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advert")]
	public partial class Advert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _A_Id;
		
		private int _AdvertNum;
		
		private string _ProdHouse;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<int> _J_Id;
		
		private System.Nullable<int> _Ap_Id;
		
		private EntityRef<Apply> _Apply;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_IdChanging(int value);
    partial void OnA_IdChanged();
    partial void OnAdvertNumChanging(int value);
    partial void OnAdvertNumChanged();
    partial void OnProdHouseChanging(string value);
    partial void OnProdHouseChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnJ_IdChanging(System.Nullable<int> value);
    partial void OnJ_IdChanged();
    partial void OnAp_IdChanging(System.Nullable<int> value);
    partial void OnAp_IdChanged();
    #endregion
		
		public Advert()
		{
			this._Apply = default(EntityRef<Apply>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int A_Id
		{
			get
			{
				return this._A_Id;
			}
			set
			{
				if ((this._A_Id != value))
				{
					this.OnA_IdChanging(value);
					this.SendPropertyChanging();
					this._A_Id = value;
					this.SendPropertyChanged("A_Id");
					this.OnA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertNum", DbType="Int NOT NULL")]
		public int AdvertNum
		{
			get
			{
				return this._AdvertNum;
			}
			set
			{
				if ((this._AdvertNum != value))
				{
					this.OnAdvertNumChanging(value);
					this.SendPropertyChanging();
					this._AdvertNum = value;
					this.SendPropertyChanged("AdvertNum");
					this.OnAdvertNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdHouse", DbType="VarChar(40)")]
		public string ProdHouse
		{
			get
			{
				return this._ProdHouse;
			}
			set
			{
				if ((this._ProdHouse != value))
				{
					this.OnProdHouseChanging(value);
					this.SendPropertyChanging();
					this._ProdHouse = value;
					this.SendPropertyChanged("ProdHouse");
					this.OnProdHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_J_Id", DbType="Int")]
		public System.Nullable<int> J_Id
		{
			get
			{
				return this._J_Id;
			}
			set
			{
				if ((this._J_Id != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJ_IdChanging(value);
					this.SendPropertyChanging();
					this._J_Id = value;
					this.SendPropertyChanged("J_Id");
					this.OnJ_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ap_Id", DbType="Int")]
		public System.Nullable<int> Ap_Id
		{
			get
			{
				return this._Ap_Id;
			}
			set
			{
				if ((this._Ap_Id != value))
				{
					if (this._Apply.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAp_IdChanging(value);
					this.SendPropertyChanging();
					this._Ap_Id = value;
					this.SendPropertyChanged("Ap_Id");
					this.OnAp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apply_Advert", Storage="_Apply", ThisKey="Ap_Id", OtherKey="Ap_Id", IsForeignKey=true)]
		public Apply Apply
		{
			get
			{
				return this._Apply.Entity;
			}
			set
			{
				Apply previousValue = this._Apply.Entity;
				if (((previousValue != value) 
							|| (this._Apply.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Apply.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Apply.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._Ap_Id = value.Ap_Id;
					}
					else
					{
						this._Ap_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Apply");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Advert", Storage="_Job", ThisKey="J_Id", OtherKey="J_Id", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Adverts.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Adverts.Add(this);
						this._J_Id = value.J_Id;
					}
					else
					{
						this._J_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Apply")]
	public partial class Apply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ap_Id;
		
		private string _FName;
		
		private string _Surname;
		
		private string _RecentWork;
		
		private string _Upload;
		
		private System.Nullable<int> _Us_Id;
		
		private EntitySet<Advert> _Adverts;
		
		private EntityRef<LUser> _LUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAp_IdChanging(int value);
    partial void OnAp_IdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnRecentWorkChanging(string value);
    partial void OnRecentWorkChanged();
    partial void OnUploadChanging(string value);
    partial void OnUploadChanged();
    partial void OnUs_IdChanging(System.Nullable<int> value);
    partial void OnUs_IdChanged();
    #endregion
		
		public Apply()
		{
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			this._LUser = default(EntityRef<LUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ap_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ap_Id
		{
			get
			{
				return this._Ap_Id;
			}
			set
			{
				if ((this._Ap_Id != value))
				{
					this.OnAp_IdChanging(value);
					this.SendPropertyChanging();
					this._Ap_Id = value;
					this.SendPropertyChanged("Ap_Id");
					this.OnAp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecentWork", DbType="Char(300) NOT NULL", CanBeNull=false)]
		public string RecentWork
		{
			get
			{
				return this._RecentWork;
			}
			set
			{
				if ((this._RecentWork != value))
				{
					this.OnRecentWorkChanging(value);
					this.SendPropertyChanging();
					this._RecentWork = value;
					this.SendPropertyChanged("RecentWork");
					this.OnRecentWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upload", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Upload
		{
			get
			{
				return this._Upload;
			}
			set
			{
				if ((this._Upload != value))
				{
					this.OnUploadChanging(value);
					this.SendPropertyChanging();
					this._Upload = value;
					this.SendPropertyChanged("Upload");
					this.OnUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Us_Id", DbType="Int")]
		public System.Nullable<int> Us_Id
		{
			get
			{
				return this._Us_Id;
			}
			set
			{
				if ((this._Us_Id != value))
				{
					if (this._LUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUs_IdChanging(value);
					this.SendPropertyChanging();
					this._Us_Id = value;
					this.SendPropertyChanged("Us_Id");
					this.OnUs_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Apply_Advert", Storage="_Adverts", ThisKey="Ap_Id", OtherKey="Ap_Id")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUser_Apply", Storage="_LUser", ThisKey="Us_Id", OtherKey="Us_Id", IsForeignKey=true)]
		public LUser LUser
		{
			get
			{
				return this._LUser.Entity;
			}
			set
			{
				LUser previousValue = this._LUser.Entity;
				if (((previousValue != value) 
							|| (this._LUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LUser.Entity = null;
						previousValue.Applies.Remove(this);
					}
					this._LUser.Entity = value;
					if ((value != null))
					{
						value.Applies.Add(this);
						this._Us_Id = value.Us_Id;
					}
					else
					{
						this._Us_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("LUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Apply = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Apply = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _J_Id;
		
		private string _ProdHouse;
		
		private string _Upload;
		
		private string _TypeOfShow;
		
		private string _Description;
		
		private System.DateTime _Time;
		
		private EntitySet<Advert> _Adverts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJ_IdChanging(int value);
    partial void OnJ_IdChanged();
    partial void OnProdHouseChanging(string value);
    partial void OnProdHouseChanged();
    partial void OnUploadChanging(string value);
    partial void OnUploadChanged();
    partial void OnTypeOfShowChanging(string value);
    partial void OnTypeOfShowChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public Job()
		{
			this._Adverts = new EntitySet<Advert>(new Action<Advert>(this.attach_Adverts), new Action<Advert>(this.detach_Adverts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_J_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int J_Id
		{
			get
			{
				return this._J_Id;
			}
			set
			{
				if ((this._J_Id != value))
				{
					this.OnJ_IdChanging(value);
					this.SendPropertyChanging();
					this._J_Id = value;
					this.SendPropertyChanged("J_Id");
					this.OnJ_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProdHouse", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ProdHouse
		{
			get
			{
				return this._ProdHouse;
			}
			set
			{
				if ((this._ProdHouse != value))
				{
					this.OnProdHouseChanging(value);
					this.SendPropertyChanging();
					this._ProdHouse = value;
					this.SendPropertyChanged("ProdHouse");
					this.OnProdHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upload", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Upload
		{
			get
			{
				return this._Upload;
			}
			set
			{
				if ((this._Upload != value))
				{
					this.OnUploadChanging(value);
					this.SendPropertyChanging();
					this._Upload = value;
					this.SendPropertyChanged("Upload");
					this.OnUploadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfShow", DbType="Char(40) NOT NULL", CanBeNull=false)]
		public string TypeOfShow
		{
			get
			{
				return this._TypeOfShow;
			}
			set
			{
				if ((this._TypeOfShow != value))
				{
					this.OnTypeOfShowChanging(value);
					this.SendPropertyChanging();
					this._TypeOfShow = value;
					this.SendPropertyChanged("TypeOfShow");
					this.OnTypeOfShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Advert", Storage="_Adverts", ThisKey="J_Id", OtherKey="J_Id")]
		public EntitySet<Advert> Adverts
		{
			get
			{
				return this._Adverts;
			}
			set
			{
				this._Adverts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Adverts(Advert entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUsers")]
	public partial class LUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Us_Id;
		
		private string _FName;
		
		private string _Surname;
		
		private string _Username;
		
		private string _Email;
		
		private string _Crew;
		
		private string _Usertype;
		
		private string _Password;
		
		private string _Con_pass;

		private System.Nullable<int> _check;

		private string _Availability;

		private EntitySet<Apply> _Applies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUs_IdChanging(int value);
    partial void OnUs_IdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCrewChanging(string value);
    partial void OnCrewChanged();
    partial void OnUsertypeChanging(string value);
    partial void OnUsertypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCon_passChanging(string value);
    partial void OnCon_passChanged();
	partial void OncheckChanging(System.Nullable<int> value);
	partial void OncheckChanged();
	partial void OnAvailabilityChanging(string value);
	partial void OnAvailabilityChanged();
	#endregion

		public LUser()
		{
			this._Applies = new EntitySet<Apply>(new Action<Apply>(this.attach_Applies), new Action<Apply>(this.detach_Applies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Us_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Us_Id
		{
			get
			{
				return this._Us_Id;
			}
			set
			{
				if ((this._Us_Id != value))
				{
					this.OnUs_IdChanging(value);
					this.SendPropertyChanging();
					this._Us_Id = value;
					this.SendPropertyChanged("Us_Id");
					this.OnUs_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crew", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Crew
		{
			get
			{
				return this._Crew;
			}
			set
			{
				if ((this._Crew != value))
				{
					this.OnCrewChanging(value);
					this.SendPropertyChanging();
					this._Crew = value;
					this.SendPropertyChanged("Crew");
					this.OnCrewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usertype", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Usertype
		{
			get
			{
				return this._Usertype;
			}
			set
			{
				if ((this._Usertype != value))
				{
					this.OnUsertypeChanging(value);
					this.SendPropertyChanging();
					this._Usertype = value;
					this.SendPropertyChanged("Usertype");
					this.OnUsertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Con_pass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Con_pass
		{
			get
			{
				return this._Con_pass;
			}
			set
			{
				if ((this._Con_pass != value))
				{
					this.OnCon_passChanging(value);
					this.SendPropertyChanging();
					this._Con_pass = value;
					this.SendPropertyChanged("Con_pass");
					this.OnCon_passChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Name = "[check]", Storage = "_check", DbType = "Int")]
		public System.Nullable<int> check
		{
			get
			{
				return this._check;
			}
			set
			{
				if ((this._check != value))
				{
					this.OncheckChanging(value);
					this.SendPropertyChanging();
					this._check = value;
					this.SendPropertyChanged("check");
					this.OncheckChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Availability", DbType = "VarChar(255)")]
		public string Availability
		{
			get
			{
				return this._Availability;
			}
			set
			{
				if ((this._Availability != value))
				{
					this.OnAvailabilityChanging(value);
					this.SendPropertyChanging();
					this._Availability = value;
					this.SendPropertyChanged("Availability");
					this.OnAvailabilityChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUser_Apply", Storage="_Applies", ThisKey="Us_Id", OtherKey="Us_Id")]
		public EntitySet<Apply> Applies
		{
			get
			{
				return this._Applies;
			}
			set
			{
				this._Applies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applies(Apply entity)
		{
			this.SendPropertyChanging();
			entity.LUser = this;
		}
		
		private void detach_Applies(Apply entity)
		{
			this.SendPropertyChanging();
			entity.LUser = null;
		}
	}
}
#pragma warning restore 1591
